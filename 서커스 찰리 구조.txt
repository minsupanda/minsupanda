[GameManager]
- m_This : static GameManager*
- m_ClientRect : RECT
- m_hWnd : HWND
- m_forntDC : HDC
- m_backDC : HDC
- m_backBitmap : HBITMAP
- m_width : int
- m_height : int
- m_DrawBaseX : const float
- MyCreateDIBSection(HDC, int width, int height) : HBITMAP
- m_Score : int
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
+ Get_Instance() : static GameManager*
+ Distory() : void
+ Release() : void
+ Init(HWND) : void
+ Draw() : void
+ Update(const float& deltaTime) : void
+ ColliderCheck(const RECT& player, const RECT& colliderRect,  const RECT& colliderScoreRect) : bool
// m_Score += 10

enum Direction
{ None, Right, Left, Up, Down}

[Player]
- m_CharacterImage[6] : Bitmap* : 모든 캐릭터 이미지
- m_CurPlayerImage : Bitmap* : 현재 캐릭터 이미지
- m_PlayerSize : const Size* : 캐릭터 이미지 크기
- m_fx : float // 이미지 좌표
- m_fy : float // 이미지 좌표
- m_DefaultX : float // 캐릭터 기본 x좌표
- m_DefaultY : float // 캐릭터 기본 y좌표
- m_MaxY : float // 캐릭터 맥스 y좌표
- m_GoalX : float // 골인 x 좌표
- m_MoveDistance : float // 현재까지 움직인 거리 : 처음에 뒤로 안가지게, 골인 전 몇 m터 지점부터는 캐릭터가 움직이게
- m_CurMoveDistance : float // 한 프레임에 캐릭터가 움직인 거리
- m_DirX : Direction // 캐릭터 x좌표 이동 방향
- m_DirY : Direction // 캐릭터 y좌표 이동 방향
- m_Goal : bool
- m_Junp : bool

- Input(const float& deltaTime) : void // 키보드 입력값 받는 함수
- Jump(const float& deltaTime) : void // 점프 함수
- GoalCheck() : void //골인 지점에 들어왔는 지 확인하는 함수 ***********수정해야함***************
- ImageChange() : void // 애니메이션 함수
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
+ Init() : void
+ Draw(HDC m_backDC) : void
+ Update(const float& deltaTime) : float MoveDistance
+ Get_MoveDistance() : const float // 총 이동거리 반환 함수
+ Get_Goal() : const bool // 골인 변수 반환 함수

[BackGround]
- m_BackGorundImage[BackGroundImage::ImageEnd] : Bitmap*
- m_CurAudiecneImage : Bitmap*
- m_GroundSize : const SIZE*
- m_AudienceSize: const SIZE*
- m_BackGroundWidth : float
- m_DrawBaseX : float
- m_ImageChangeTime : float
- ImageChange(const float& deltaTime) : void
- PrintImage(HDC& m_backDC, Bitmap* PrintImage, int& i, int& j, float& DrawBaseY)
----------------------------
+ Init() : void
+ Draw(HDC m_backDC, float& DrawBaseX, float& DrawBaseY) : void
+ Update(float& DrawBaseX) : void


[Goal]
- m_GoalImage : Bitmap*
- m_fx : float
- m_fy : float
- m_GoalRange : RECT
- m_bDraw : bool
----------------------------

+ Init() : void
+ Draw(HDC m_backDC) : void
+ Update(): void


