[GameManager]
- m_This : static GameManager*
- m_ClientRect : RECT
- m_hWnd : HWND
- m_forntDC : HDC
- m_backDC : HDC
- m_backBitmap : HBITMAP
- m_width : int
- m_height : int
- m_DrawBaseX : const float
- MyCreateDIBSection(HDC, int width, int height) : HBITMAP
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
- Get_Instance() : static GameManager*
- Distory() : void
- Release() : void
- Init(HWND) : void
- Draw() : void
- Update(const float& deltaTime) : void


enum Direction
{ None, Right, Left, *Jump}
define : DEFAULT_SPEED, DEFAULT_X, DEFAULT_Y, *MAX_Y

[Player]
- m_CharacterImage[6] : Bitmap*
- m_fx : float // 이미지 좌표
- m_fy : float // 이미지 좌표
- m_Speed : float // 캐릭터 스피드
- m_MoveDistance : float // 현재까지 움직인 거리 : 처음에 뒤로 안가지게, 골인 전 몇 m터 지점부터는 캐릭터가 움직이게
- dir : Direction // 이동 방향
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
- Init() : void
- Input() : void
- Jump() : void
- Draw(HDC m_backDC) : void
- Update(const float& deltaTime, float& DrawBaseX) : float MoveDistance


Collider : struct
{
 Bitmap* Image;
 SIZE size;
 float fx;
 float fy;
} 

[BackGround]
m_BackGorundImage[BackGroundImage::ImageEnd] : Bitmap*
ImageSize[BackGroundImage::ImageEnd] : const SIZE* 
m_BackGroundWidth : int
----------------------------
- Init() : void
- Draw(HDC m_backDC, float& DrawBaseX, float& DrawBaseY) : void
- Update(float& DrawBaseX) : void

// 충돌체 따로 만들기
// 돈은 작은 링 통과하면 먹는 걸로 체크하는 것