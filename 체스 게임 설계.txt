[GameManger]
- m_hThis : static GameManager
- m_CurPlayColor : PieceColor
- m_CurChoicePiece : Piece*
- m_ClickTileImage : Bitmap*
- m_MoveblePosition : vector<RECT>
-----------------------------------------
- GameManager() : GameManager
- SetTurn() : void
- SetScene() : void
+ ~GameManager() : GameManager
+ Get_Instance() : GameManager*
+ Init(HWND) : void
+ Click_Check(POINT) : bool
+ Draw(HDC) : void
+ Distory() : void


[GameBoardManager]
- m_hthis : static GameBoardManager
- m_Image[2] : Bitmap
- m_width : int
- m_height : int
- m_Tile[8][8] : struct
-----------------------------------------
- GameBoardManager() : GameBoardManager
+ ~GameBoardManager() : GameBoardManager
+ Get_Instance() : GameBoardManager
+ Init(int, int, int, int) : void
+ Draw(HDC) : void
+ PieceCoord_In_Tile_Save(vector) : void
+ Point_in_TileRect_Check(POINT) : Piece
+ Position_In_PieceCheck(Piece*) : bool
+ Distory() : void


[PieceManager]--->[Piece]
- m_hthis : static PieceManager
- Pieces[2] : vector<Pieces*>
------------------------------------
- PieceManager() : PieceManager
+ ~GameBoardManager() : PieceManager
+ Get_Instance() : PieceManager
+ Get_Pieces(PieceColor) : vector<Piece*>
+ Init(int, int, int, int) : void
+ CoordInit<Template>(PieceColor, int, int, int, int, int) : void
+ Draw(HDC) : void
+ Distory() : void


<<abstract>>
[Piece]
- m_piece : PieceType
- m_color : PieceColor
- m_pieceImage : Bitmap*
- m_ix : int
- m_iy : int
- m_width : int
- m_height : int
- m_BitmapRect : RECT
------------------------------------
+ MoveCheck(vector<RECT>&) abstract : void
+ Piece() : Piece
+ ~Piece() : Piece
+ Get_PieceType() : PieceType
+ Get_Color() : PieceColor
+ Get_CX() : int
+ Get_CY() : int
+ Init(int, int, int, int) : void
+ Draw(HDC) : void
+ PositionChange(RECT*) : void


             <<abstract>>  
[Pawn] - - ▷ [Piece]
------------------------------------
+ MoveCheck(vector<RECT>&) override : void
+ Pawn() : Pawn
+ Pawn(PieceColor) : Pawn
+ ~Pawn() : Pawn


             <<abstract>>  
[Knight] - - ▷ [Piece]
------------------------------------
+ MoveCheck(vector<RECT>&) override : void
+ Knight() : Knight
+ Knight(PieceColor) : Knight
+ ~Knight() : Knight


             <<abstract>>  
[Rook] - - ▷ [Piece]
------------------------------------
+ MoveCheck(vector<RECT>&) override : void
+ Rook() : Rook
+ Rook(PieceColor) : Rook
+ ~Rook() : Rook


             <<abstract>>  
[Bishop] - - ▷ [Piece]
------------------------------------
+ MoveCheck(vector<RECT>&) override : void
+ Bishop() : Bishop
+ Bishop(PieceColor) : Bishop
+ ~Bishop() : Bishop


             <<abstract>>  
[Queen] - - ▷ [Piece]
------------------------------------
+ MoveCheck(vector<RECT>&) override : virtual void
+ Queen() : Queen
+ Queen(PieceColor) : Queen
+ ~Queen() : Queen


             <<abstract>>  
[King] - - ▷ [Piece]
------------------------------------
+ MoveCheck(vector<RECT>&) override : virtual void
+ King() : King
+ King(PieceColor) : King
+ ~King() : King


[BitmapManager]--->[Bitmp]
- m_hthis : static BitmapManager
- m_parrBitmap : vector<Bitmap>
-----------------------------------------
- BitmapManager() : BitmapManager
+ ~BitmapManager() : BitmapManager
+ Get_Instance() : static BitmapManager*
+ Get_Image(int) : Bitmap*
+ Init(HWND) : void
+ Distory() : void 


[Bitmap]
- MemDC : HDC
- m_Bitmap : HBITMAP
- m_Size : SIZE
-----------------------------------------
+ Bitmap() : Bitmap
+ Bitmap() : Bitmap
+ Init(HDC, const char*) : void
+ Draw(HDC, int, int, int, int) : void 
+ PieceDraw(HDC, int, int, int, int) : void
+ MovableTileDraw(HDC, int, int, int, int) : void 
